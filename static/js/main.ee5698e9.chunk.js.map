{"version":3,"sources":["static/fashion/flower-o.jpg","static/fashion/shoes-o.jpg","static/fashion/bag-o.jpg","Components/Navbar.js","Components/Homepage.js","Components/test.js","Components/Product.js","Components/Fashion.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","baseUrl","process","Navbar","this","props","ulItems","map","item","react_default","a","createElement","key","className","Link","to","generateList","Component","Homepage","test","Product","_this","onClick","console","log","price","name","src","img","alt","Fashion","items","flower","bag","shoes","Components_Product","App","BrowserRouter","Components_Navbar","Route","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ee5698e9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/flower-o.dc5a299f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/shoes-o.5f77e987.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bag-o.430dc142.jpg\";","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst baseUrl = process.env.PUBLIC_URL;\r\n\r\n\r\nclass Navbar extends Component {\r\n    generateList() {\r\n        const list = this.props.ulItems;\r\n\r\n        return list.map(item => {\r\n            if (item === 'Fashion') {\r\n                return (\r\n                    <li key={item} className=\"navbar__list-item\">\r\n                        <Link to={baseUrl + \"/fashion\"}>{item}</Link>\r\n                    </li>\r\n                )\r\n            } else if ( item === \"Cool Stuff\") {\r\n                return (\r\n                    <li key={item} className=\"navbar__list-item\">\r\n                        <Link to={baseUrl + \"/cool_stuff\"}>{item}</Link>\r\n                    </li>\r\n                )\r\n            } else if ( item === \"Luxury\") {\r\n                return (\r\n                    <li key={item} className=\"navbar__list-item\">\r\n                        <Link to={baseUrl + \"/luxury\"}>{item}</Link>\r\n                    </li>\r\n                )\r\n            }\r\n\r\n            return (\r\n                <li key={item} className=\"navbar__list-item\">\r\n                    <Link to={baseUrl + \"/test\"}>{item}</Link>\r\n                </li>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <header>\r\n                <div className=\"container\">\r\n                    <nav className=\"navbar\">\r\n                        <div>\r\n                            <Link to={baseUrl + \"/\"} className=\"navbar__logo\">\r\n                                Home page\r\n                            </Link>\r\n                            <ul className=\"navbar__list\">\r\n                                {this.generateList()}\r\n                            </ul>\r\n                        </div>\r\n                    </nav>\r\n                </div>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { Component } from 'react';\r\n\r\nclass Homepage extends Component {\r\n    render() {\r\n        return (\r\n            <main className=\"homepage\">\r\n                <div className=\"container\">\r\n                    <span className=\"homepage__text\">\r\n                        What you looking at, choose one of 3 our categories and treat yourself with the best...\r\n                    </span>\r\n                </div>\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Homepage;\r\n","import React, { Component } from 'react';\r\n\r\nclass test extends Component {\r\n    render() {\r\n        return (\r\n            <main className=\"homepage\">\r\n                <div className=\"container\">\r\n                    <span className=\"homepage__text\">\r\n                        This is only test page for About/Contact route.\r\n                    </span>\r\n                </div>\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport default test;\r\n","import React, { Component } from 'react';\r\n\r\nclass Product extends Component {\r\n    render() {\r\n        const show = () => console.log(this.props.price);\r\n\r\n        return (\r\n            <div onClick={show} className=\"[ col-xl-4 ]\">\r\n                <div className=\"category-item\">\r\n                        <span className=\"category-item__name\">\r\n                            {this.props.name}\r\n                        </span>\r\n                    <img src={this.props.img} alt=\"\"\r\n                         className=\"img-fluid category-item__img\"/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Product;\r\n","import React, { Component } from 'react';\r\nimport flower from'../static/fashion/flower-o.jpg';\r\nimport shoes from'../static/fashion/shoes-o.jpg';\r\nimport bag from'../static/fashion/bag-o.jpg';\r\nimport Product from './Product';\r\n\r\nclass Fashion extends Component {\r\n    render() {\r\n        const items = [\r\n            {\r\n                name: 'flower-o',\r\n                img: flower,\r\n                price: '409,99'\r\n            },\r\n            {\r\n                name: 'bag-o',\r\n                img: bag,\r\n                price: '329,99'\r\n            },\r\n            {\r\n                name: 'o-shoes',\r\n                img: shoes,\r\n                price: '279,99'\r\n            }\r\n        ];\r\n\r\n        const generateCards = () => {\r\n            return items.map( item => {\r\n                return (\r\n                    <Product key={item.name} img={item.img} name={item.name} price={item.price}/>\r\n                )\r\n            })\r\n        };\r\n\r\n        return (\r\n            <div className=\"category-wrapper\">\r\n                <div className=\"container\">\r\n                    <p>fashion</p>\r\n                    <div className=\"row\">\r\n                        {generateCards()}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Fashion;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport './scss/vendors/bootstrap/_bootstrap.scss';\nimport './scss/_main.scss';\nimport Navbar from './Components/Navbar';\nimport Homepage from './Components/Homepage';\nimport test from './Components/test';\nimport Fashion from './Components/Fashion';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nconst baseUrl = process.env.PUBLIC_URL;\n\nclass App extends Component {\n  render() {\n    return (\n          <Router>\n              <div className=\"App\">\n                  <Navbar ulItems={[\n                      'About Us',\n                      'Fashion',\n                      'Cool Stuff',\n                      'Luxury',\n                      'Contact Us'\n                  ]}/>\n\n                  <Route path={baseUrl + '/'} exact component={Homepage} />\n                  <Route path={baseUrl + '/test'} exact component={test} />\n                  <Route path={baseUrl + '/fashion'} exact component={Fashion} />\n              </div>\n          </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}